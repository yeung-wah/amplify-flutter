version: 2.1

orbs:
  macos: circleci/macos@2
  android: circleci/android@2.0.0
  flutter-orb: circleci/flutter@1.0.1

executors:
  docker-executor:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/amplify-flutter

  macos-executor:
    macos:
      xcode: 13
    working_directory: ~/amplify-flutter

commands:
  install_flutter:
    description: Install Flutter and set up paths.
    parameters:
      flutter_branch:
        description: Flutter branch or version tag.
        type: string
        default: stable
    steps:
      - run:
          name: Set up Flutter
          command: |
            echo 'export FLUTTER_HOME=${HOME}/sdks/flutter' >> $BASH_ENV
            echo 'export FLUTTER_BRANCH=<< parameters.flutter_branch >>' >> $BASH_ENV
            echo 'export FLUTTER_ROOT=${FLUTTER_HOME}' >> $BASH_ENV
            echo 'export PATH=${PATH}:${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin:${HOME}/.pub-cache/bin:${FLUTTER_HOME}/.pub-cache/bin' >> $BASH_ENV
            source $BASH_ENV
            git clone --branch ${FLUTTER_BRANCH} https://github.com/flutter/flutter.git ${FLUTTER_HOME}
            (yes || true) | flutter doctor --android-licenses && flutter doctor
            flutter precache
  install_melos:
    steps:
      - run:
          name: Install and set up melos
          command: |
            flutter pub global activate melos 1.3.0
            melos bootstrap
  activate_pana:
    steps:
      - run:
          name: Install and set up pana
          command: |
            flutter pub global activate pana
  install_tuneup:
    steps:
      - run:
          name: Install tuneup
          command: |
            flutter pub global activate tuneup

  setup-amplify-flutter-project:
    description: Setup Amplify project
    steps:
      - run:
          name: Setting up dependences
          command: cd amplified_todo && flutter pub add amplify_flutter && flutter pub add amplify_datastore
      - run:
          name: Adding integration_test package
          command: 'cd amplified_todo && sed -i -e "s/dev_dependencies:/dev_dependencies:\n  integration_test:\n    sdk: flutter/" ./pubspec.yaml && cat ./pubspec.yaml'
      - run:
          name: Update outdated dependences
          command: cd amplified_todo && flutter pub upgrade --major-versions
      - run:
          name: Adding Amplify code
          command: mv canaries/dummy_amplifyconfiguration.dart canaries/amplifyconfiguration.dart && cp canaries/amplifyconfiguration.dart amplified_todo/lib && cp canaries/main.dart amplified_todo/lib && cp -r canaries/integration_test amplified_todo/integration_test

jobs:
  format_flutter:
    executor: docker-executor
    steps:
      - install_flutter
      - checkout
      - install_melos
      - run: melos run format

  analyze_flutter:
    executor: docker-executor
    steps:
      - install_flutter
      - checkout
      - install_melos
      - run:
          name: Analyze Dart/Flutter Code
          command: melos run analyze --no-select

  pub_analysis:
    executor: docker-executor
    parameters:
      plugin_threshold:
        type: string
        description: the plugin name and the pub analysis threshold in the format <plugin_name>:<threshold>
    steps:
      - install_flutter
      - checkout
      - install_melos
      - activate_pana
      - run:
          name: Run pub analysis and fail if the score is below the max score
          command: param=<< parameters.plugin_threshold >> && plugin=${param%:*} && threshold=${param#*:} && melos exec -c 1 --fail-fast --scope="$plugin" -- pana --no-warning --exit-code-threshold $threshold .

  unit_test_flutter:
    executor: docker-executor
    parameters:
      plugin:
        type: string
    steps:
      - install_flutter
      - checkout
      - install_melos
      - run:
          name: Install junitreport for JUnit XML reports
          command: flutter pub global activate junitreport
      - run:
          name: Run Flutter Unit Tests
          command: melos run test:unit:flutter:plugin << parameters.plugin >>
      - run:
          name: Upload flutter test coverage
          command: melos run upload:coverage:flutter
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            mkdir -p ~/test-results/failures/
            find . -type f -regex "\./packages/.*/test-results/.*-flutter-test\.xml" -exec cp {} ~/test-results/junit/ \;
            find . -type f -regex "\./packages/.*/failures/.*\.png" -exec cp {} ~/test-results/failures/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: ~/test-results/failures

  unit_test_ios:
    executor: macos-executor
    parameters:
      plugin:
        type: string
    steps:
      - install_flutter
      - checkout
      - install_melos
      - run:
          name: Run lint checks
          command: melos run lint:ios:<< parameters.plugin >>
      - run:
          name: Pre-start iOS simulator
          command: xcrun simctl boot "iPhone 13" || true
      - run:
          name: Build example iOS apps
          command: |
            melos run build:examples:ios:<< parameters.plugin >>
      - run:
          name: Run iOS Unit Tests
          command: melos run test:unit:ios:plugin << parameters.plugin >>
      - run:
          name: Upload iOS test coverage
          command: melos run upload:coverage:ios
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex "\./packages/.*/example/ios/test-results/.*-xcodebuild-test\.xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  unit_test_android:
    executor: docker-executor
    parameters:
      plugin:
        type: string
    environment:
      _JAVA_OPTIONS: -XX:MaxRAMPercentage=80.0
      GRADLE_OPTS: -Xmx1536m -Xms768m -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.daemon=false
    steps:
      - install_flutter
      - checkout
      - install_melos
      - run:
          name: Build example APKs
          command: |
            melos run build:examples:android:<< parameters.plugin >>
          no_output_timeout: 20m
      - run:
          name: Run lint checks
          command: melos run lint:android:<< parameters.plugin >>
      - run:
          name: Run Android Unit Tests
          command: melos run test:unit:android:plugin << parameters.plugin >>
      - run:
          name: Upload android test coverage
          command: melos run upload:coverage:android
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex "\./packages/.*/example/build/.*/test-results/.*\.xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  getting_started_smoke_test_android:
    executor:
      name: android/android-machine
      resource-class: xlarge
      tag: 2022.03.1
    steps:
      - checkout
      - install_flutter
      - run:
          name: Setting up project
          command: flutter create amplified_todo
      - run:
          name: Update Android version
          command: cd amplified_todo && sed -i -e "s/minSdkVersion .*/minSdkVersion 21/" ./android/app/build.gradle && cat ./android/app/build.gradle
      - setup-amplify-flutter-project
      - flutter-orb/install_android_gradle:
          app-dir: ./amplified_todo
      - android/create-avd:
          avd-name: flutter
          install: true
          system-image: system-images;android-29;default;x86
      - android/start-emulator:
          avd-name: flutter
          post-emulator-launch-assemble-command: ls -lrt
          restore-gradle-cache-find-args: ./amplified_todo/android -name 'build.gradle'
      - run:
          name: Run Flutter Tests
          command: cd amplified_todo && flutter test integration_test

  getting_started_smoke_test_ios:
    executor: macos-executor
    working_directory: ~/flutter-canaries
    steps:
      - checkout
      - macos/preboot-simulator:
          device: iPhone 13
          version: "15.0"
      - install_flutter
      - run:
          name: Setting up project
          command: flutter create amplified_todo
      - setup-amplify-flutter-project
      - run:
          name: Update ios version
          command: cd amplified_todo && sed -i -e "s/# platform :ios, '9.0'/platform :ios, '13.0'/" ./ios/Podfile
      - run:
          name: Run Flutter Tests
          command: cd amplified_todo && flutter test integration_test

releasable_branches: &releasable_branches
  branches:
    only:
      - release
      - main

workflows:
  test_deploy:
    jobs:
      - format_flutter
      - analyze_flutter
      # TODO: Enable pub_analysis after https://github.com/dart-lang/pana/issues/1020 is 
      # resolved or these are updated to run against unpub
      # - pub_analysis:
      #     matrix:
      #       parameters:
      #         plugin_threshold: [
      #             # should be in format <plugin_name>:<threshold>
      #             "amplify_analytics_pinpoint:10",
      #             "amplify_api:10",
      #             "amplify_auth_cognito:10",
      #             "amplify_authenticator:0",
      #             "amplify_core:10",
      #             "amplify_datastore:20",
      #             "amplify_flutter:20",
      #             "amplify_storage_s3:10",
      #           ]
      - unit_test_flutter:
          matrix:
            parameters:
              plugin:
                [
                  "amplify_analytics_pinpoint",
                  "amplify_api",
                  "amplify_auth_cognito",
                  "amplify_authenticator",
                  "amplify_core",
                  "amplify_datastore",
                  "amplify_flutter",
                  "amplify_storage_s3"
                ]
      - unit_test_android:
          matrix:
            parameters:
              plugin:
                [
                  "amplify_analytics_pinpoint",
                  "amplify_api",
                  "amplify_auth_cognito",
                  "amplify_core",
                  "amplify_datastore",
                  "amplify_flutter",
                ]
      - unit_test_ios:
          matrix:
            parameters:
              plugin:
                [
                  "amplify_analytics_pinpoint",
                  "amplify_api",
                  "amplify_auth_cognito",
                  "amplify_datastore",
                  "amplify_flutter",
                ]
  getting_started_smoke_tests:
    jobs:
      - getting_started_smoke_test_android
      - getting_started_smoke_test_ios
